{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,MAAO,QACPC,QAAS,QACTC,eAAgB,UAGlB,IAAMC,EAAWC,SAASC,cAAc,SAkBxC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,GACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEtDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,SAC/CA,MAxBTL,EAASc,iBAAiB,UAAU,SAAAC,GAClCA,EAAEC,iBAMF,IAJA,IAAIX,EAAQY,OAAOjB,EAASK,MAAMa,OAC5BC,EAASF,OAAOjB,EAASmB,OAAOD,OAChCE,EAAOH,OAAOjB,EAASoB,KAAKF,OAEzBG,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChClB,EAAckB,EAAGhB,GACdiB,MAAK,SAAAC,G,OAAU7B,EAAAF,GAASG,OAAO6B,QAAQD,MACvCE,OAAM,SAAAC,G,OAAShC,EAAAF,GAASG,OAAOgC,QAAQD,MAE1CrB,GAASe,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nNotiflix.Notify.init({\n  width: '280px',\n  useIcon: 'false',\n  useFontAwesome: 'false',\n   });\n\nconst formElem = document.querySelector('.form');\n\nformElem.addEventListener('submit', e => {\n  e.preventDefault();\n\n  let delay = Number(formElem.delay.value);\n  const amount = Number(formElem.amount.value);\n  const step = Number(formElem.step.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(result => Notiflix.Notify.success(result))\n      .catch(error => Notiflix.Notify.failure(error));\n\n    delay += step;\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }, delay);\n  });\n}"],"names":["$iU1Pc","parcelRequire","$parcel$interopDefault","Notify","init","width","useIcon","useFontAwesome","$ce04d3a99e08e73b$var$formElem","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","addEventListener","e","preventDefault","Number","value","amount","step","i","then","result","success","catch","error","failure"],"version":3,"file":"03-promises.e04fd938.js.map"}